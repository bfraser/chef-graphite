# Graphite Apache Virtual Host
#
# Generated by Chef
<% if (node['apache']['listen_ports'] & [ node['graphite']['listen_port'].to_i, node['graphite']['listen_port'].to_s ]).empty? -%>
Listen <%= node['graphite']['listen_port'] %>
<% end -%>
NameVirtualHost *:<%= node['graphite']['listen_port'] %>

# You may need to manually edit this file to fit your needs.
<VirtualHost *:<%= node['graphite']['listen_port']%>>
        ServerName <%= node['graphite']['url'] %>
        ServerAdmin <%= node['graphite']['web']['admin_email'] %>
        <% unless node['graphite']['url_aliases'].empty? %>
        ServerAlias <%= [node['graphite']['url_aliases']].flatten.compact.join(" ") %>
        <% end %>
        DocumentRoot "<%= node['graphite']['doc_root'] %>"
        ErrorLog <%= node['graphite']['storage_dir'] %>/log/webapp/error.log
        CustomLog <%= node['graphite']['storage_dir'] %>/log/webapp/access.log common

        Header set Access-Control-Allow-Origin "*"
        Header set Access-Control-Allow-Methods "GET, OPTIONS"
        Header set Access-Control-Allow-Headers "origin, authorization, accept"

        <%- if node['graphite']['ssl']['enabled'] %>
        SSLEngine on
        SSLCipherSuite <%= node['graphite']['ssl']['cipher_suite'] %>

        SSLCertificateFile <%= node['graphite']['ssl']['certificate_file'] %>
        SSLCertificateKeyFile <%= node['graphite']['ssl']['certificate_key_file'] %>
          <%- if node['graphite']['ssl']['ca_certificate_file'] %>
        SSLCACertificateFile <%= node['graphite']['ssl']['ca_certificate_file'] %>
          <%- end %>
        <%- end %>

        <%- if node['graphite']['apache']['module'] == 'mod_wsgi' %>
        WSGIDaemonProcess graphite processes=5 threads=5 display-name='%{GROUP}' inactivity-timeout=120
        WSGIProcessGroup graphite
        WSGIApplicationGroup %{GLOBAL}
        WSGIImportScript <%= node['graphite']['base_dir'] %>/conf/graphite.wsgi process-group=graphite application-group=%{GLOBAL}
        WSGIScriptAlias / <%= node['graphite']['base_dir'] %>/conf/graphite.wsgi
        <%- end %>

        <Directory <%= node['graphite']['base_dir'] %>/conf/>

                Options All
                AllowOverride All
                Require all granted

                <%- if node['graphite']['apache']['basic_auth']['enabled'] %>
                AuthType Basic
                AuthName "Restricted Area"
                AuthBasicProvider    file
                AuthUserFile <%= node['graphite']['apache']['basic_auth']['file_path'] %>
                Require valid-user
                <%- end %>

                <%- if node['graphite']['apache']['module'] == 'mod_python' %>
                SetHandler python-program
                PythonPath "['<%= node['graphite']['doc_root'] %>', '<%= node['graphite']['base_dir'] %>/lib'] + sys.path"
                PythonHandler django.core.handlers.modpython
                SetEnv DJANGO_SETTINGS_MODULE graphite.settings
                PythonDebug Off
                PythonAutoReload Off
                <%- end %>
        </Directory>

        Alias /content/ /opt/graphite/webapp/content/
        <Location "/content/">
                SetHandler None
                Options All
                AllowOverride All
                Require all granted
        </Location>

        # NOTE: In order for the django admin site media to work you
        # must change @DJANGO_ROOT@ to be the path to your django
        # installation, which is probably something like:
        # /usr/lib/python2.6/site-packages/django
        Alias /media/ "<%= node['graphite']['django']['root'] %>/contrib/admin/media/"
        <Location "/media/">
                SetHandler None
                Options All
                AllowOverride All
                Require all granted
        </Location>

        <% if node['recipes'].include? "ganglia::web" -%>
        <Location "/ganglia/">
                SetHandler None
        </Location>
        <% end -%>

</VirtualHost>
